[33mcommit 700fd69bc08eef42ab21e69acc71760c65290bd4[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m)[m
Author: Keshav Bashyal <keshavbbashyal@gmail.com>
Date:   Wed Jul 6 06:39:57 2022 +0545

    caloriecouter

[1mdiff --git a/caloriecounter/caloriecounter/__init__.py b/caloriecounter/caloriecounter/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/caloriecounter/caloriecounter/__pycache__/__init__.cpython-310.pyc b/caloriecounter/caloriecounter/__pycache__/__init__.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..b4647d4[m
Binary files /dev/null and b/caloriecounter/caloriecounter/__pycache__/__init__.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/caloriecounter/__pycache__/settings.cpython-310.pyc b/caloriecounter/caloriecounter/__pycache__/settings.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..1fa1487[m
Binary files /dev/null and b/caloriecounter/caloriecounter/__pycache__/settings.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/caloriecounter/__pycache__/urls.cpython-310.pyc b/caloriecounter/caloriecounter/__pycache__/urls.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..ef58bb1[m
Binary files /dev/null and b/caloriecounter/caloriecounter/__pycache__/urls.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/caloriecounter/__pycache__/wsgi.cpython-310.pyc b/caloriecounter/caloriecounter/__pycache__/wsgi.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..2dbd44d[m
Binary files /dev/null and b/caloriecounter/caloriecounter/__pycache__/wsgi.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/caloriecounter/asgi.py b/caloriecounter/caloriecounter/asgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6c14157[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/caloriecounter/asgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mASGI config for caloriecounter project.[m
[32m+[m
[32m+[m[32mIt exposes the ASGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/4.0/howto/deployment/asgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.asgi import get_asgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'caloriecounter.settings')[m
[32m+[m
[32m+[m[32mapplication = get_asgi_application()[m
[1mdiff --git a/caloriecounter/caloriecounter/settings.py b/caloriecounter/caloriecounter/settings.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e01bf86[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/caloriecounter/settings.py[m
[36m@@ -0,0 +1,138 @@[m
[32m+[m[32m"""[m
[32m+[m[32mDjango settings for caloriecounter project.[m
[32m+[m
[32m+[m[32mGenerated by 'django-admin startproject' using Django 4.0.5.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/4.0/topics/settings/[m
[32m+[m
[32m+[m[32mFor the full list of settings and their values, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/4.0/ref/settings/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mfrom pathlib import Path[m
[32m+[m
[32m+[m[32m# Build paths inside the project like this: BASE_DIR / 'subdir'.[m
[32m+[m[32mBASE_DIR = Path(__file__).resolve().parent.parent[m
[32m+[m
[32m+[m
[32m+[m[32m# Quick-start development settings - unsuitable for production[m
[32m+[m[32m# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: keep the secret key used in production secret![m
[32m+[m[32mSECRET_KEY = 'django-insecure-^+wa21$7%24ibd(&!c*f5a3h6cbrhv9w=61w&n=r$+l3n^9lj4'[m
[32m+[m
[32m+[m[32m# SECURITY WARNING: don't run with debug turned on in production![m
[32m+[m[32mDEBUG = True[m
[32m+[m
[32m+[m[32mALLOWED_HOSTS = [][m
[32m+[m
[32m+[m
[32m+[m[32m# Application definition[m
[32m+[m
[32m+[m[32mINSTALLED_APPS = [[m
[32m+[m[32m    'django.contrib.admin',[m
[32m+[m[32m    'django.contrib.auth',[m
[32m+[m[32m    'django.contrib.contenttypes',[m
[32m+[m[32m    'django.contrib.sessions',[m
[32m+[m[32m    'django.contrib.messages',[m
[32m+[m[32m    'django.contrib.staticfiles',[m
[32m+[m[32m    'ccapp',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mMIDDLEWARE = [[m
[32m+[m[32m    'django.middleware.security.SecurityMiddleware',[m
[32m+[m[32m    'django.contrib.sessions.middleware.SessionMiddleware',[m
[32m+[m[32m    'django.middleware.common.CommonMiddleware',[m
[32m+[m[32m    'django.middleware.csrf.CsrfViewMiddleware',[m
[32m+[m[32m    'django.contrib.auth.middleware.AuthenticationMiddleware',[m
[32m+[m[32m    'django.contrib.messages.middleware.MessageMiddleware',[m
[32m+[m[32m    'django.middleware.clickjacking.XFrameOptionsMiddleware',[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mROOT_URLCONF = 'caloriecounter.urls'[m
[32m+[m
[32m+[m[32mTEMPLATES = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'BACKEND': 'django.template.backends.django.DjangoTemplates',[m
[32m+[m[32m        'DIRS': [BASE_DIR / 'ccapp.templates'],[m
[32m+[m[32m        'APP_DIRS': True,[m
[32m+[m[32m        'OPTIONS': {[m
[32m+[m[32m            'context_processors': [[m
[32m+[m[32m                'django.template.context_processors.debug',[m
[32m+[m[32m                'django.template.context_processors.request',[m
[32m+[m[32m                'django.contrib.auth.context_processors.auth',[m
[32m+[m[32m                'django.contrib.messages.context_processors.messages',[m
[32m+[m[32m            ],[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m[32mWSGI_APPLICATION = 'caloriecounter.wsgi.application'[m
[32m+[m
[32m+[m
[32m+[m[32m# Database[m
[32m+[m[32m# https://docs.djangoproject.com/en/4.0/ref/settings/#databases[m
[32m+[m
[32m+[m[32mDATABASES = {[m
[32m+[m[32m    #[m[41m [m
[32m+[m[32m    'default': {[m
[32m+[m[32m        'ENGINE': 'django.db.backends.mysql',[m
[32m+[m[32m        'NAME': 'caloriecounter',[m
[32m+[m[32m        'USER': 'root',[m
[32m+[m[32m        'PASSWORD': '',[m
[32m+[m[32m        'HOST': 'localhost',[m
[32m+[m[32m        'PORT': '3306',[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m# Password validation[m
[32m+[m[32m# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators[m
[32m+[m
[32m+[m[32mAUTH_PASSWORD_VALIDATORS = [[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',[m
[32m+[m[32m    },[m
[32m+[m[32m][m
[32m+[m
[32m+[m
[32m+[m[32m# Internationalization[m
[32m+[m[32m# https://docs.djangoproject.com/en/4.0/topics/i18n/[m
[32m+[m
[32m+[m[32mLANGUAGE_CODE = 'en-us'[m
[32m+[m
[32m+[m[32mTIME_ZONE = 'UTC'[m
[32m+[m
[32m+[m[32mUSE_I18N = True[m
[32m+[m
[32m+[m[32mUSE_TZ = True[m
[32m+[m
[32m+[m
[32m+[m[32m# Static files (CSS, JavaScript, Images)[m
[32m+[m[32m# https://docs.djangoproject.com/en/4.0/howto/static-files/[m
[32m+[m
[32m+[m[32mSTATIC_URL = 'static/'[m
[32m+[m
[32m+[m[32m# Default primary key field type[m
[32m+[m[32m# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field[m
[32m+[m
[32m+[m[32mDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'[m
[32m+[m
[32m+[m[32mEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'[m
[32m+[m[32mEMAIL_HOST = 'smtp.gmail.com'[m
[32m+[m[32mEMAIL_USE_TLS = True[m
[32m+[m[32m# EMAIL_USE_SSL = True[m
[32m+[m[32mEMAIL_PORT = 587[m
[32m+[m[32m# EMAIL_PORT = 465[m
[32m+[m[32mEMAIL_HOST_USER = 'keshavbbashyal@gmail.com'[m
[32m+[m[32mEMAIL_HOST_PASSWORD = 'ysgoqnbrigltuhtb'[m
[1mdiff --git a/caloriecounter/caloriecounter/urls.py b/caloriecounter/caloriecounter/urls.py[m
[1mnew file mode 100644[m
[1mindex 0000000..dd5c552[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/caloriecounter/urls.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m"""caloriecounter URL Configuration[m
[32m+[m
[32m+[m[32mThe `urlpatterns` list routes URLs to views. For more information please see:[m
[32m+[m[32m    https://docs.djangoproject.com/en/4.0/topics/http/urls/[m
[32m+[m[32mExamples:[m
[32m+[m[32mFunction views[m
[32m+[m[32m    1. Add an import:  from my_app import views[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', views.home, name='home')[m
[32m+[m[32mClass-based views[m
[32m+[m[32m    1. Add an import:  from other_app.views import Home[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')[m
[32m+[m[32mIncluding another URLconf[m
[32m+[m[32m    1. Import the include() function: from django.urls import include, path[m
[32m+[m[32m    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))[m
[32m+[m[32m"""[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom django.urls import path,include[m
[32m+[m
[32m+[m[32murlpatterns = [[m
[32m+[m[32m    path('admin/', admin.site.urls),[m
[32m+[m[32m    path('',include('ccapp.urls')),[m
[32m+[m[32m][m
[1mdiff --git a/caloriecounter/caloriecounter/wsgi.py b/caloriecounter/caloriecounter/wsgi.py[m
[1mnew file mode 100644[m
[1mindex 0000000..deae6eb[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/caloriecounter/wsgi.py[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m"""[m
[32m+[m[32mWSGI config for caloriecounter project.[m
[32m+[m
[32m+[m[32mIt exposes the WSGI callable as a module-level variable named ``application``.[m
[32m+[m
[32m+[m[32mFor more information on this file, see[m
[32m+[m[32mhttps://docs.djangoproject.com/en/4.0/howto/deployment/wsgi/[m
[32m+[m[32m"""[m
[32m+[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mfrom django.core.wsgi import get_wsgi_application[m
[32m+[m
[32m+[m[32mos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'caloriecounter.settings')[m
[32m+[m
[32m+[m[32mapplication = get_wsgi_application()[m
[1mdiff --git a/caloriecounter/ccapp/__init__.py b/caloriecounter/ccapp/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/caloriecounter/ccapp/__pycache__/__init__.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/__init__.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..1239e82[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/__init__.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/admin.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/admin.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..875f607[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/admin.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/apps.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/apps.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..31c8ce4[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/apps.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/forms.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/forms.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..dc4f208[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/forms.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/models.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/models.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..c2a4fa9[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/models.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/urls.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/urls.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..71611fc[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/urls.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/__pycache__/views.cpython-310.pyc b/caloriecounter/ccapp/__pycache__/views.cpython-310.pyc[m
[1mnew file mode 100644[m
[1mindex 0000000..af8a232[m
Binary files /dev/null and b/caloriecounter/ccapp/__pycache__/views.cpython-310.pyc differ
[1mdiff --git a/caloriecounter/ccapp/admin.py b/caloriecounter/ccapp/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..17b59f7[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/ccapp/admin.py[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m
[32m+[m[32mfrom ccapp.models import AppUser,Diet,HealthStatus[m
[32m+[m
[32m+[m[32mclass AppUserAdmin(admin.ModelAdmin):[m
[32m+[m[32m    list_display = ('first_name','middle_name','last_name','contact','email',\[m
[32m+[m[32m            'gender','dob','blood_group','password', 'created_at')[m
[32m+[m
[32m+[m[32m    list_filter = ('first_name','created_at')[m
[32m+[m[32m    search_fields = ('first_name','last_name')[m
[32m+[m
[32m+[m[32mclass HealthStatusAdmin(admin.ModelAdmin):[m
[32m+[m[32m    list_display = ('health_issue','description','created_at')[m
[32m+[m
[32m+[m[32mclass DietAdmin(admin.ModelAdmin):[m
[32m+[m[32m    list_display = ('diet_plan','diet_title','diet_duration','medicine_details')[m
[32m+[m
[32m+[m[32m# Register your models here.[m
[32m+[m[32madmin.site.register(AppUser, AppUserAdmin)[m
[32m+[m[32madmin.site.register(HealthStatus, HealthStatusAdmin)[m
[32m+[m[32madmin.site.register(Diet, DietAdmin)[m
[32m+[m
[32m+[m[32madmin.site.site_title = "dashboard"[m
[32m+[m[32madmin.site.site_header = "Keshav's Company"[m
[32m+[m[32madmin.site.index_title = "Admin Dashboard"[m
[32m+[m[32madmin.site.app_index = "CCAPP"[m
[32m+[m
[1mdiff --git a/caloriecounter/ccapp/apps.py b/caloriecounter/ccapp/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..2a55a71[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/ccapp/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass CcappConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'ccapp'[m
[1mdiff --git a/caloriecounter/ccapp/forms.py b/caloriecounter/ccapp/forms.py[m
[1mnew file mode 100644[m
[1mindex 0000000..34ec439[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/ccapp/forms.py[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m
[32m+[m[32mfrom django import forms[m
[32m+[m[32mfrom ccapp.models import AppUser[m
[32m+[m[32mclass LoginForm(forms.ModelForm):[m
[32m+[m[32m    password = forms.CharField(widget=forms.PasswordInput)[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        #field = " -all-"[m
[32m+[m[32m        fields = ('email','password')[m
[32m+[m[32m        model = AppUser[m
[32m+[m
[32m+[m[32mclass RegistrationForm(forms.ModelForm):[m
[32m+[m[32m    password = forms.CharField(widget=forms.PasswordInput)[m
[32m+[m[32m    class Meta:[m
[32m+[m[32m        fields = ('first_name','middle_name','last_name','contact','email',\[m
[32m+[m[32m            'gender','dob','blood_group','password','address','major_health_issue')[m
[32m+[m[32m        model = AppUser[m
[32m+[m
[1mdiff --git a/caloriecounter/ccapp/migrations/0001_initial.py b/caloriecounter/ccapp/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..3f56688[m
[1m--- /dev/null[m
[1m+++ b/caloriecounter/ccapp/migrations/0001_initial.py[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32m# Generated by Django 4.0.5 on 2022-07-03 11:13[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='AppUser',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('first_name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),[m
[32m+[m[32m                ('last_name', models.CharField(max_length=100)),[m
[32m+[m[32m                ('email', models.EmailField(max_length=254, unique=True)),[m
[32m+[m[32m                ('contact', models.IntegerField()),[m
[32m+[m[32m                ('gender', models.CharField(max_length=10)),[m
[32m+[m[32m                ('dob', models.DateField(blank=True, default=0, null=True)),[m
[32m+[m[32m                ('address', models.CharField(default=None, max_length=200)),[m
[32m+[m[32m                ('major_health_issue', models.CharField(default=None, max_length=200, null=True)),[m
[32m+[m[32m                ('blood_group', models.CharField(max_length=10)),[m
[32m+[m[32m                ('password', models.CharField(max_length=20)),[m
[32m+[m[32m                ('verification_code', models.CharField(max_length=10)),[m
[32m+[m[32m                ('is_verified', models.BooleanField(default=False)),[m
[32m+[m[32m                ('is_removed', models.BooleanField(default=False)),[m
[32m+[m[32m                ('created_at', models.DateTimeField(default=0)),[m
[32m+[m[32m                ('updated_at', models.DateTimeField(null=True)),[m
[32m+[m[32m                ('removed_at', models.DateTimeField(null=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'db_table': 'app_users',[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='HealthStatus',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('health_issue', models.CharField(max_length=200)),[m
[32m+[m[32m                ('description', models.TextField(max_length=500)),[m
[32m+[m[32m                ('is_removed', models.BooleanField(default=False)),[m
[32m+[m[32m                ('created_at', models.DateTimeField(default=0)),[m
[32m+[m[32m                ('updated_at', models.DateTimeField(null=True)),[m
[32m+[m[32m                ('removed_at', models.DateTimeField(null=True)),[m
[32m+[m[32m                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccapp.appuser')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'db_table': 'app_health_status',[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Diet',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('diet_title', models.CharField(max_length=100)),[m
[32m+[m[32m                ('diet_plan', models.TextField(max_length=500)),[m
[32m+[m[32m                ('diet_duration', models.CharField(max_length=200)),[m
[32m+[m[32m                ('medicine_details', models.TextField(max_length=500)),[m
[32m+[m[32m                ('remarks', models.TextField(max_length=500)),[m
[32m+[m[32m                ('is_removed', models.BooleanField(default=False)),[m
[32m+[m[32m                ('